#include <cstdio>
#include <iostream>
#include <string>
#include <memory>
#include <stdexcept>
#include <string>
#include <array>

/// <summary>
/// this function runs the strings command by creating a pipe and reading the output of stdout
/// </summary>
/// <param name="cmd">
/// the command to run, in our case, running strings on a file chosen by the user | type: const char*
/// </param>
/// <returns>
/// returns the output of the strings command on the file | type: std::string
/// </returns>
std::string exec(const char* cmd) {
    std::array<char, 128> buffer;
    std::string result;
    std::unique_ptr<FILE, decltype(&_pclose)> pipe(_popen(cmd, "r"), _pclose);
    if (!pipe) {
        throw std::runtime_error("popen() failed!");
    }
    while (fgets(buffer.data(), buffer.size(), pipe.get()) != nullptr) {
        result += buffer.data();
    }
    return result;
}

int main(void)
{
    std::string outPut = "";

    std::string fileName;
    std::cout << "Input file name: " << std::endl;
    std::getline(std::cin, fileName);
    std::string cmd = "strings -nobanner " + fileName;
    outPut.append(exec(cmd.c_str()));
    std::cout << outPut << std::endl;
}