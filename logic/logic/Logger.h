#pragma once

#include <string>
#include <fstream>

#define STRINGS_FILE "StringsScanLog.txt"
#define VIRUSTOTAL_FILE "VirustTotalScanLog.txt"
#define YARA_FILE "yaraScanLog.txt"
#define PACKET_FILE "packetScanLog.txt"
#define PROCESS_FILE "processScanLog.txt"
#define REGISTRY_FILE "registryScanLog.txt"
#define NUM_OF_FILES 6

#define OUTPUT_FILE "logicOutput.txt"

class Logger
{
	public:

		/// <summary>
		/// outputs a txt log file with 'fileName' name and 'logString' as its content
		/// </summary>
		/// <param name="logString">
		/// string containing the log information | type: const std::string& 
		/// </param>
		/// <param name="fileName">
		/// name of the file to create | type: std::string
		/// </param>
		static void writeLogToFile(const std::string& logString, const std::string& fileName);

		/// <summary>
		/// combine all log files into one output file.
		/// </summary>
		static void combineLogFiles();

		/// <summary>
		/// checks if file is empty
		/// </summary>
		/// <param name="pFile">
		/// input file | type: ifstream&
		/// </param>
		/// <returns>
		/// true if empty, false otherwise | type: bool
		/// </returns>
		static bool is_empty(std::ifstream& pFile);
};