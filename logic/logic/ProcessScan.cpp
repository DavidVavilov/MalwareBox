#include "ProcessScan.h"

ProcessScan::ProcessScan(DWORD Pid) : _Pid(Pid)
{
    HRESULT hres;

    // Step 1: --------------------------------------------------
    // Initialize COM. ------------------------------------------

    hres = CoInitializeEx(0, COINIT_MULTITHREADED);
    if (FAILED(hres))
    {
        throw(std::exception(("Failed to initialize COM library. Error code = " + Helper::HresultToHex(hres)).c_str()));
        //cout << "Failed to initialize COM library. Error code = 0x"
        //    << hex << hres << endl;
        //return;                  // Program has failed.
    }

    // Step 2: --------------------------------------------------
    // Set general COM security levels --------------------------

    hres = CoInitializeSecurity(
        NULL,
        -1,                          // COM negotiates service
        NULL,                        // Authentication services
        NULL,                        // Reserved
        RPC_C_AUTHN_LEVEL_DEFAULT,   // Default authentication 
        RPC_C_IMP_LEVEL_IMPERSONATE, // Default Impersonation  
        NULL,                        // Authentication info
        EOAC_NONE,                   // Additional capabilities 
        NULL                         // Reserved
    );


    if (FAILED(hres))
    {
        CoUninitialize();
        throw(std::exception(("Failed to initialize security. Error code = " + Helper::HresultToHex(hres)).c_str()));
        //return;                      // Program has failed.
    }
}

ProcessScan::~ProcessScan()
{
    CoUninitialize();
}

void ProcessScan::runScan()
{
}
