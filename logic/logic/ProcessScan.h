#pragma once

#include "Helper.h"
#include "IDynamicScan.h"
#include "EventSinkCreationEvent.h"
#include "EventSinkDeletionEvent.h"
#include <string>

#define PROCESS_CREATION_WQL "SELECT * FROM __InstanceCreationEvent WITHIN 1 WHERE TargetInstance ISA 'Win32_Process' AND TargetInstance.ParentProcessId="
#define PROCESS_DELETION_WQL "SELECT * FROM __InstanceDeletionEvent WITHIN 1 WHERE TargetInstance ISA 'Win32_Process' AND TargetInstance.ParentProcessId="

class ProcessScan 
{
	public:
		ProcessScan(DWORD Pid);
		virtual ~ProcessScan();

		/// <summary>
		/// this function runs the process creation/deletion scan for the now running file, this function will be run as a seperate thread 
		/// </summary>
		virtual void runScan();

	private:

		DWORD _Pid;

		// wql querys for process creation and process deletion
		std::string _wqlCreation;
		

		std::string _wqlDeletion;

		// 2 stringstreams for creation and deletion respectively, these will be used for out put to file at the end of 
		std::stringstream creationLog;

		std::stringstream deletionLog;
};